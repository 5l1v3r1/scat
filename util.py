#!/usr/bin/python3
# coding: utf8

import struct
import datetime
import sys

import string
XXD_SET = string.ascii_letters + string.digits + string.punctuation

crc_table = [
        0x0000, 0x1189, 0x2312, 0x329b, 0x4624, 0x57ad, 0x6536, 0x74bf,
        0x8c48, 0x9dc1, 0xaf5a, 0xbed3, 0xca6c, 0xdbe5, 0xe97e, 0xf8f7,
        0x1081, 0x0108, 0x3393, 0x221a, 0x56a5, 0x472c, 0x75b7, 0x643e,
        0x9cc9, 0x8d40, 0xbfdb, 0xae52, 0xdaed, 0xcb64, 0xf9ff, 0xe876,
        0x2102, 0x308b, 0x0210, 0x1399, 0x6726, 0x76af, 0x4434, 0x55bd,
        0xad4a, 0xbcc3, 0x8e58, 0x9fd1, 0xeb6e, 0xfae7, 0xc87c, 0xd9f5,
        0x3183, 0x200a, 0x1291, 0x0318, 0x77a7, 0x662e, 0x54b5, 0x453c,
        0xbdcb, 0xac42, 0x9ed9, 0x8f50, 0xfbef, 0xea66, 0xd8fd, 0xc974,
        0x4204, 0x538d, 0x6116, 0x709f, 0x0420, 0x15a9, 0x2732, 0x36bb,
        0xce4c, 0xdfc5, 0xed5e, 0xfcd7, 0x8868, 0x99e1, 0xab7a, 0xbaf3,
        0x5285, 0x430c, 0x7197, 0x601e, 0x14a1, 0x0528, 0x37b3, 0x263a,
        0xdecd, 0xcf44, 0xfddf, 0xec56, 0x98e9, 0x8960, 0xbbfb, 0xaa72,
        0x6306, 0x728f, 0x4014, 0x519d, 0x2522, 0x34ab, 0x0630, 0x17b9,
        0xef4e, 0xfec7, 0xcc5c, 0xddd5, 0xa96a, 0xb8e3, 0x8a78, 0x9bf1,
        0x7387, 0x620e, 0x5095, 0x411c, 0x35a3, 0x242a, 0x16b1, 0x0738,
        0xffcf, 0xee46, 0xdcdd, 0xcd54, 0xb9eb, 0xa862, 0x9af9, 0x8b70,
        0x8408, 0x9581, 0xa71a, 0xb693, 0xc22c, 0xd3a5, 0xe13e, 0xf0b7,
        0x0840, 0x19c9, 0x2b52, 0x3adb, 0x4e64, 0x5fed, 0x6d76, 0x7cff,
        0x9489, 0x8500, 0xb79b, 0xa612, 0xd2ad, 0xc324, 0xf1bf, 0xe036,
        0x18c1, 0x0948, 0x3bd3, 0x2a5a, 0x5ee5, 0x4f6c, 0x7df7, 0x6c7e,
        0xa50a, 0xb483, 0x8618, 0x9791, 0xe32e, 0xf2a7, 0xc03c, 0xd1b5,
        0x2942, 0x38cb, 0x0a50, 0x1bd9, 0x6f66, 0x7eef, 0x4c74, 0x5dfd,
        0xb58b, 0xa402, 0x9699, 0x8710, 0xf3af, 0xe226, 0xd0bd, 0xc134,
        0x39c3, 0x284a, 0x1ad1, 0x0b58, 0x7fe7, 0x6e6e, 0x5cf5, 0x4d7c,
        0xc60c, 0xd785, 0xe51e, 0xf497, 0x8028, 0x91a1, 0xa33a, 0xb2b3,
        0x4a44, 0x5bcd, 0x6956, 0x78df, 0x0c60, 0x1de9, 0x2f72, 0x3efb,
        0xd68d, 0xc704, 0xf59f, 0xe416, 0x90a9, 0x8120, 0xb3bb, 0xa232,
        0x5ac5, 0x4b4c, 0x79d7, 0x685e, 0x1ce1, 0x0d68, 0x3ff3, 0x2e7a,
        0xe70e, 0xf687, 0xc41c, 0xd595, 0xa12a, 0xb0a3, 0x8238, 0x93b1,
        0x6b46, 0x7acf, 0x4854, 0x59dd, 0x2d62, 0x3ceb, 0x0e70, 0x1ff9,
        0xf78f, 0xe606, 0xd49d, 0xc514, 0xb1ab, 0xa022, 0x92b9, 0x8330,
        0x7bc7, 0x6a4e, 0x58d5, 0x495c, 0x3de3, 0x2c6a, 0x1ef1, 0x0f78
        ]

def dm_crc16(arr):
    ret = 0xffff
    for b in arr:
        ret = (ret >> 8) ^ crc_table[(ret ^ b) & 0xff]
    return ret ^ 0xffff

def wrap(arr):
    t = arr.replace(b'\x7d', b'\x7d\x5d')
    t = t.replace(b'\x7e', b'\x7d\x5e')
    return t

def unwrap(arr):
    t = arr.replace(b'\x7d\x5e', b'\x7e')
    t = t.replace(b'\x7d\x5d', b'\x7d')
    return t

def generate_packet(arr):
    crc = struct.pack('<H', dm_crc16(arr))
    arr += crc
    arr = wrap(arr)
    arr += b'\x7e'
    return arr

log_config_1 = bytes.fromhex('''
73 00 00 00 03 00 00 00 01 00 00 00 3F 08 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00
'''.strip().replace('\n', '').replace(' ', ''))

log_config_2 = bytes.fromhex('''
73 00 00 00 03 00 00 00 04 00 00 00 18 09 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

log_config_3 = bytes.fromhex('''
73 00 00 00 03 00 00 00 05 00 00 00 28 04 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00
'''.strip().replace('\n', '').replace(' ', ''))

log_config_4 = bytes.fromhex('''
73 00 00 00 03 00 00 00 07 00 00 00 5E 0B 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

log_config_5 = bytes.fromhex('''
73 00 00 00 03 00 00 00 0A 00 00 00 92 03 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

log_config_6 = bytes.fromhex('''
73 00 00 00 03 00 00 00 0B 00 00 00 09 02 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 
'''.strip().replace('\n', '').replace(' ', ''))

log_config_7 = bytes.fromhex('''
73 00 00 00 03 00 00 00 0D 00 00 00 07 02 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00
'''.strip().replace('\n', '').replace(' ', ''))

emr_1 = bytes.fromhex('''
7D 04 00 00 65 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
'''.strip().replace('\n', '').replace(' ', ''))

emr_2 = bytes.fromhex('''
7D 04 F4 01 FA 01 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00
'''.strip().replace('\n', '').replace(' ', ''))

emr_3 = bytes.fromhex('''
7D 04 E8 03 EF 03 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_4 = bytes.fromhex('''
7D 04 D0 07 D8 07 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_5 = bytes.fromhex('''
7D 04 B8 0B C6 0B 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_6 = bytes.fromhex('''
7D 04 A0 0F AA 0F 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_7 = bytes.fromhex('''
7D 04 94 11 AE 11 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_8 = bytes.fromhex('''
7D 04 F8 11 06 12 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_9 = bytes.fromhex('''
7D 04 88 13 A6 13 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_10 = bytes.fromhex('''
7D 04 7C 15 8C 15 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_11 = bytes.fromhex('''
7D 04 70 17 C0 17 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_12 = bytes.fromhex('''
7D 04 64 19 79 19 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_13 = bytes.fromhex('''
7D 04 58 1B 5B 1B 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_14 = bytes.fromhex('''
7D 04 BC 1B C7 1B 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_15 = bytes.fromhex('''
7D 04 20 1C 21 1C 00 00 00 00 00 00 00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_16 = bytes.fromhex('''
7D 04 40 1F 40 1F 00 00 00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_17 = bytes.fromhex('''
7D 04 34 21 4C 21 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_18 = bytes.fromhex('''
7D 04 28 23 30 23 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_19 = bytes.fromhex('''
7D 04 1C 25 25 25 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_20 = bytes.fromhex('''
7D 04 D8 27 E2 27 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_21 = bytes.fromhex('''
7D 04 0B 28 0F 28 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_22 = bytes.fromhex('''
7D 04 3C 28 3C 28 00 00 00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_23 = bytes.fromhex('''
7D 04 6E 28 86 28 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

# 0x1098   RUIM Debug
# 0x1158   Reserved
# 0x11EB   Protocol Services Data
# 0x1272   Generic SIM Toolkit Task
# 0x14CE   UIM DS Data
# 0x1572   Network IP Rm Tx 80 Bytes
# 0x1573   Network IP Rm Rx 80 Bytes
# 0x1574   Network IP Rm Tx Full
# 0x1575   Network IP Rm Rx Full
# 0x1576   Network IP Um Tx 80 Bytes
# 0x1577   Network IP Um Rx 80 Bytes
# 0x1578   Network IP Um Tx Full
# 0x1579   Network IP Um Rx Full
# 0x157A   Link Rm Tx 80 Bytes
# 0x157B   Link Rm Rx 80 Bytes
# 0x157C   Link Rm Tx Full
# 0x157D   Link Rm Rx Full
# 0x157E   Link Um Tx 80 Bytes
# 0x157F   Link Um Rx 80 Bytes
# 0x1580   Link Um Tx Full
# 0x1581   Link Um Rx Full
# 0x1582   Flow Rm Tx 80 Bytes
# 0x1583   Flow Rm Tx Full
# 0x1584   Flow Um Tx 80 Bytes
# 0x1585   Flow Um Tx Full
# 0x1648   Indoor Info
# 0x1649   Indoor RTS CTS Scan
# 0x1650   Indoor Active Scan
# 0x1651   Unrecognized
# 0x1652   Unrecognized
# 0x1653   Unrecognized
# 0x1654   Unrecognized

log_enable_ip = bytes.fromhex('''
73 00 00 00 03 00 00 00 01 00 00 00 47 08 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 08 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 FC FF 
3F 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 03 1F 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

# 0x4005   WCDMA Search Cell Reselection Rank
# 0x4127   WCDMA Cell ID
# 0x412B   WCDMA SIB
# 0x412F   WCDMA Signaling Messages

log_enable_wcdma = bytes.fromhex('''
73 00 00 00 03 00 00 00 04 00 00 00 F7 0F 00 00 
20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 80 88 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
'''.strip().replace('\n', '').replace(' ', ''))

# 0x5065 GSM L1 FCCH Acquisition
# 0x5066 GSM L1 SCH Acquisition
# 0x506A GSM L1 New Burst Metrics
# 0x506C GSM L1 Burst Metrics
# 0x5071 GSM Surround Cell BA List
# 0x507A GSM L1 Serving Auxiliary Measurments
# 0x507B GSM L1 Neighbor Cell Auxiliary Measurments
# 0x512F GSM RR Signaling Message
# 0x5134 GSM RR Cell Information
# 0x51FD GPRS RR Packet System Information 1
# 0x51FE GPRS RR Packet System Information 2
# 0x51FF GPRS RR Packet System Information 3
# 0x5226 GPRS MAC Signaling Message
# 0x5230 GPRS SM/GMM OTA Signaling Message
# 0x5A65 GSM DSDS L1 FCCH Acquisition
# 0x5A66 GSM DSDS L1 SCH Acquisition
# 0x5A6C GSM DSDS L1 Burst Metrics
# 0x5A71 GSM DSDS Surround Cell BA List
# 0x5A7A GSM DSDS L1 Serving Auxiliary Measurements
# 0x5A7B GSM DSDS L1 Neighbor Cell Auxiliary Measurements
# 0x5B2F GSM DSDS RR Signaling Message
# 0x5B34 GSM DSDS RR Cell Information
# 0x5BFD GPRS DSDS RR Packet System Information 1
# 0x5BFE GPRS DSDS RR Packet System Information 2
# 0x5BFF GPRS DSDS RR Packet System Information 3

log_enable_gsm = bytes.fromhex('''
73 00 00 00 03 00 00 00 05 00 00 00 F7 0F 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 60 14 02 0C 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 80 10 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 E0 
00 00 00 00 40 00 01 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 60 10 02 0C 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 80 10 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 E0 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

# 0x713A UMTS UE OTA
# 0x7B3A UMTS DSDS NAS Signaling Messages

log_enable_umts = bytes.fromhex('''
73 00 00 00 03 00 00 00 07 00 00 00 5E 0B 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 04 00 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

log_enable_lte_w_macpdu = bytes.fromhex('''
73 00 00 00 03 00 00 00 0B 00 00 00 09 02 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 1F 00 00 00 
00 00 00 00 00 00 00 00 07 00 00 00 0F 3C 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 
'''.strip().replace('\n', '').replace(' ', ''))

# 0xB061 LTE MAC RACH Trigger
# 0xB062 LTE MAC Rach Attempt
# 0xB17F LTE ML1 Serving Cell Meas and Eval
# 0xB180 LTE ML1 Neighbor Measurements
# 0xB197 LTE ML1 Serving Cell Information
# 0xB0E0 LTE NAS EMM Security Protected Incoming Msg
# 0xB0E1 LTE NAS EMM Security Protected Outgoing Msg
# 0xB0E2 LTE NAS EMM Plain OTA Incoming Message
# 0xB0E3 LTE NAS EMM Plain OTA Outgoing Message
# 0xB0EA LTE NAS EMM Security Protected Incoming Msg
# 0xB0EB LTE NAS EMM Security Protected Outgoing Msg
# 0xB0EC LTE NAS EMM Plain OTA Incoming Message
# 0xB0ED LTE NAS EMM Plain OTA Outgoing Message
# 0xB0C0 LTE RRC OTA Packet
# 0xB0C1 LTE RRC MIB Message Log Packet
# 0xB0C2 LTE RRC Serving Cell Info Log Pkt

log_enable_lte = bytes.fromhex('''
73 00 00 00 03 00 00 00 0B 00 00 00 09 02 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 04 00 00 00 
00 00 00 00 00 00 00 00 07 00 00 00 0F 3C 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80 
01 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_1 = bytes.fromhex('''
7D 04 00 00 5E 00 00 00 1F 00 00 00 1E 00 00 00 
1F 00 00 00 18 00 00 00 1F 00 00 00 1E 00 00 00 
1E 00 00 00 1C 00 00 00 18 00 00 00 1F 00 00 00 
18 00 00 00 1E 00 00 00 1C 00 00 00 1C 00 00 00 
1F 00 00 00 1F 00 00 00 18 00 00 00 1F 00 00 00 
1E 00 00 00 1E 00 00 00 1E 00 00 00 1F 00 00 00 
1E 00 00 00 1F 00 00 00 1F 00 00 00 1E 00 00 00 
1E 00 00 00 1E 00 00 00 1E 00 00 00 1E 00 00 00 
9E FF 03 00 FE FF 03 00 1E 00 00 00 1E 00 00 00 
1C 00 00 00 1C 00 00 00 1C 00 00 00 1C 00 00 00 
1E 00 00 00 1E 00 00 00 FE 01 00 00 1F 00 00 00 
1F 00 00 00 1C 00 00 00 1C 00 00 00 1C 00 00 00 
1E 00 00 00 FE FF FF 03 1E 00 00 00 FE 07 00 00 
1F 00 00 00 1F 00 00 00 1E 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1C 00 00 00 1F 00 00 00 
1F 00 00 00 FF 01 00 00 7F 00 00 00 1E 00 00 00 
1E 00 00 00 1F 00 00 00 FE FF 1F 00 1F 00 00 00 
1E 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1C 00 00 00 1C 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1C 00 00 00 
1C 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1E 00 00 00 1F 00 00 00 1F 00 00 00 1E 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1C 00 00 00 
1F 00 00 00
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_2 = bytes.fromhex('''
7D 04 F4 01 FA 01 00 00 1E 00 00 00 1C 00 00 00 
1C 00 00 00 1F 00 00 00 1C 00 00 00 1C 00 00 00 
1C 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_3 = bytes.fromhex('''
7D 04 E8 03 EF 03 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 1E 00 00 00 1E 00 00 00 3E 00 00 00 
1E 00 00 00 FE 07 7F 0F
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_4 = bytes.fromhex('''
7D 04 D0 07 D8 07 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 1E 00 00 00 1E 00 00 00 E0 07 00 00 
1E 00 00 00 1E 00 00 00 1E 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_5 = bytes.fromhex('''
7D 04 B8 0B C6 0B 00 00 1C 00 00 00 FC FF 71 00 
7C 00 00 00 1C 00 00 00 1C 00 00 00 FC 00 00 00 
1C 00 00 00 1C 00 00 00 1C 00 00 00 1C 00 00 00 
1C 00 00 00 1C 00 00 00 1C 00 00 00 1F 00 00 00 
1F 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_6 = bytes.fromhex('''
7D 04 A0 0F AA 0F 00 00 1C 00 00 00 1E 00 00 00 
1C 00 00 00 1E 00 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 1E 00 00 00 1E 00 00 00 FE 03 00 00 
1E 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_7 = bytes.fromhex('''
7D 04 94 11 AE 11 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 1E 00 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_8 = bytes.fromhex('''
7D 04 F8 11 05 12 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 1E 00 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 1E 00 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 1E 00 00 00 1F 00 00 00 1F 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_9 = bytes.fromhex('''
7D 04 88 13 A5 13 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 1E 00 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 1E 00 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 1E 00 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 1E 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1E 00 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 1E 00 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 1E 00 00 00 1E 00 00 00 1E 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_10 = bytes.fromhex('''
7D 04 7C 15 8B 15 00 00 3E 00 00 00 3E 00 00 00 
3E 00 00 00 3E 00 00 00 3E 00 00 00 3E 00 00 00 
3E 00 00 00 3E 00 00 00 3E 00 00 00 3E 00 00 00 
3E 00 00 00 3E 00 00 00 3E 00 00 00 3E 00 00 00 
3E 00 00 00 3E 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_11 = bytes.fromhex('''
7D 04 70 17 BE 17 00 00 1E 00 00 00 18 00 00 00 
1F 00 00 00 FF FF 7F 00 3F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 3F 00 00 00 
3F 00 00 00 3F 00 00 00 3F 00 00 00 3F 00 00 00 
3F 00 00 00 3F 00 00 00 3F 00 00 00 3F 00 00 00 
3F 00 00 00 3F 00 00 00 3F 00 00 00 3F 00 00 00 
3F 00 00 00 3F 00 00 00 3F 00 00 00 3F 00 00 00 
3F 00 00 00 3F 00 00 00 1F 00 00 00 1E 00 00 00 
1C 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
7F 00 00 00 1C 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 1E 00 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 1E 00 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 1E 00 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 1E 00 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 1E 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_11_5 = bytes.fromhex('''
7D 04 C0 17 C0 17 00 00 1F 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_12 = bytes.fromhex('''
7D 04 64 19 79 19 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_13 = bytes.fromhex('''
7D 04 58 1B 5B 1B 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 1E 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_14 = bytes.fromhex('''
7D 04 BC 1B C7 1B 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 1E 00 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 1E 00 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 1E 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_15 = bytes.fromhex('''
7D 04 20 1C 21 1C 00 00 1E 00 00 00 1E 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_16 = bytes.fromhex('''
7D 04 40 1F 40 1F 00 00 1E 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_17 = bytes.fromhex('''
7D 04 34 21 4B 21 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_18 = bytes.fromhex('''
7D 04 28 23 30 23 00 00 1E 00 00 00 1E 00 00 00 
1E 00 00 00 DE 03 00 00 FE FF 03 00 1E 00 00 00 
FE FF 7F 00 1E 00 00 00 1E 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_19 = bytes.fromhex('''
7D 04 1C 25 25 25 00 00 1F 00 00 00 1F FF 1F 00 
7F 00 00 00 3F 00 00 00 7F 00 00 00 1F 00 00 00 
FF 03 00 00 1F 00 00 00 1F 00 00 00 FF FF 71 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_20 = bytes.fromhex('''
7D 04 D8 27 E2 27 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_21 = bytes.fromhex('''
7D 04 0B 28 0F 28 00 00 FF 1F 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_22 = bytes.fromhex('''
7D 04 3C 28 3C 28 00 00 1C 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

emr_config_23 = bytes.fromhex('''
7D 04 6E 28 86 28 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 1F 00 00 00 
1F 00 00 00 1F 00 00 00 1F 00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

log_enable_1x_all = bytes.fromhex('''
73 00 00 00 03 00 00 00 01 00 00 00 5B 07 00 00 
FF FF FF F6 61 FF FF FF 7F FF 3F E0 FF FF DF FF 
FD FF FF FF FF FF FF F7 FF FF CF FF 1F 00 FC FF 
FF FF 3F 00 38 00 38 00 38 00 F0 C1 FF FF FF FF 
FF FF FF FF FF FF FF FF FF 01 00 00 FE FF FF FF 
FD FF 7F FF FF FF FF 3F 02 00 FF FF FF FF FF FF 
7F FE FF FF FF FF FF FF 02 00 00 00 F8 03 02 00 
00 00 00 00 00 F8 FF FF FF FF FF FF FF FF FF FF 
FF FF FF FF FF BF FD FF FF FF FF FF FF FF FF FF 
FF FF FF FF FF FF FF FF FF FF FF FF FF BF FF FF 
FF F7 F3 FF C7 3F FF FF FF FF FF 7F FF BF FF FF 
FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 
FF FF FF FF FF FF FF FF FF 3F 0C 00 00 00 00 00 
00 00 00 0C 00 00 F8 FF FF 03 1F 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 03 FF 03 
'''.strip().replace('\n', '').replace(' ', ''))

log_enable_wcdma_all = bytes.fromhex('''
73 00 00 00 03 00 00 00 04 00 00 00 18 09 00 00 
7F 01 FB FF F8 00 22 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
FF 7F FF FF FF CF 3C 9F FE FF 6F 03 6F 0B FF F7 
FF 7F F2 3F 00 D4 3D 00 00 00 00 00 00 00 00 00 
FF FF FF FF FF 57 63 CF 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
FE DF 1F 00 7E 00 4E 00 FF 03 00 0C 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 04 00 00 00 00 00 00 00 00 00 5B 01 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
FF FF FF 
'''.strip().replace('\n', '').replace(' ', ''))

log_enable_gsm_all = bytes.fromhex('''
73 00 00 00 03 00 00 00 05 00 00 00 28 04 00 00 
03 00 00 00 00 00 00 00 00 00 00 00 70 9E FF 3F 
FC 71 53 00 03 00 00 00 00 07 00 00 00 00 00 00 
00 00 00 00 00 F0 FF D7 00 00 00 00 00 00 00 00 
00 00 03 00 00 00 00 00 00 00 00 00 00 00 F0 FF 
E7 FF FF F7 C3 7F FF 84 E0 E3 FF FF 0D 00 0F 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
01 01 03 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

log_enable_umts_all = bytes.fromhex('''
73 00 00 00 03 00 00 00 07 00 00 00 5E 0B 00 00 
FE 7F FF FF 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 FF FF 1F 00 FF 03 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
FF 37 06 EA 07 00 07 00 00 00 00 FC F0 20 00 00 
00 00 00 00 00 00 00 00 00 FF 01 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 FF 77 00 00 7F 00 
'''.strip().replace('\n', '').replace(' ', ''))

log_enable_dtv_all = bytes.fromhex('''
73 00 00 00 03 00 00 00 0A 00 00 00 92 03 00 00 
01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
FF FF 01 00 07 00 00 00 00 00 07 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
FE FF 3F 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 
'''.strip().replace('\n', '').replace(' ', ''))

log_enable_lte_all = bytes.fromhex('''
73 00 00 00 03 00 00 00 0B 00 00 00 09 02 00 00 
06 00 FF FF FF 03 0F 00 00 00 00 00 FF 01 00 00 
FE 0F FE 03 3F 00 3F 00 FF 87 00 00 7F FC 3C 00 
00 00 FF FE FF FF 3F BA FF FE 00 00 FF FF FF F7 
EB 7F FC 79 FF 00 A7 FF 1E 00 00 00 00 00 00 00 
00 00 
'''.strip().replace('\n', '').replace(' ', ''))

log_enable_tdscdma_all = bytes.fromhex('''
73 00 00 00 03 00 00 00 0D 00 00 00 07 02 00 00 
FF FF FF FF FF A3 1F 00 FF 01 FD 8F DF 1F 00 00 
FF FF 7F 00 00 00 FF 1F 00 00 00 00 3F 00 00 00 
FF FF FF FF FF 01 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 
'''.strip().replace('\n', '').replace(' ', ''))

def parse_qxdm_ts(ts):
    # Epoch: 1980-01-06 00:00:00
    # 1 for 1/800s
    epoch = datetime.datetime(1980, 1, 6, 0, 0, 0)
    try:
        ts_delta = datetime.timedelta(seconds=ts / 800.)
    except:
        ts_delta = datetime.timedelta(seconds=0)
    return epoch + ts_delta

def xxd(buf):
    i = 0
    while i < len(buf):
        if (i + 16) < len(buf):
            print((' '.join(('%02x' % x) for x in buf[i:i+16])) + '\t' + (''.join((chr(x) if chr(x) in XXD_SET else '.') for x in buf[i:i+16])))
        else:
            print((' '.join(('%02x' % x) for x in buf[i:len(buf)])) + '   ' * (16 - (len(buf) - i)) + '\t' + (''.join((chr(x) if chr(x) in XXD_SET else '.') for x in buf[i:len(buf)])))
        i += 16
    print('-------- end --------')

def xxd_oneline(buf):
    print(' '.join(('%02x' % x) for x in buf))
    print('-------- end --------')

def warning(*objs):
    print('Warning: ', *objs, file=sys.stderr)
